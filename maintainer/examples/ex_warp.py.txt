>>> from dtwr import *
>>> import numpy as np

Default test data
>>> (query, reference) = sin_cos_data()

>>> alignment = dtw(query,reference);


>>> wq = warp(alignment,index_reference=False)
>>> wt = warp(alignment,index_reference=True)



>> plot(reference,main="Warping query");
>> lines(query[wq],col="blue");


>> plot(query,type="l",col="blue", main="Warping reference");
>> points(reference[wt]);





Asymmetric step makes it "natural" to warp
the reference, because every query index has
exactly one image (q->t is a function)



>>> alignment = dtw(query,reference,step_pattern=asymmetric)
>>> wt = warp(alignment,index_reference=True);


>> plot(query,type="l",col="blue")
>> points(reference[wt]);







